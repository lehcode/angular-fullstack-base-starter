version: '3.8'
services:
  # monorepo service
  monorepo:
    # image name and version based on environment variables
    image: mono-node_v${USE_NODE_VERSION:-18.14.1}-nestjs_v${USE_NESTJS_VERSION:-9.2.0}
    # container name
    container_name: monorepo
    # command to run on container startup
    command: /bin/bash /init.sh
    # build settings
    build:
      context: docker-assets/monorepo/
      dockerfile: Dockerfile
      # build arguments based on environment variables
      args:
        NODE_VERSION: ${USE_NODE_VERSION:-18.14.1}
        NPM_VERSION: ${USE_NPM_VERSION:-9.3.1}
        NESTJS_VERSION: ${USE_NESTJS_VERSION:-9.2.0}
        USER: ${HOST_USER:?Specify HOST_USER environment variable}
        UID: ${HOST_UID:?Specify HOST_UID environment variable}
        GROUP: ${HOST_DOCKER_GROUP:?Specify HOST_DOCKER_GROUP environment variable}
        GID: ${HOST_DOCKER_GID:?Specify HOST_DOCKER_GID environment variable}
        DEBUG: ${DEBUG:-no}
    # environment variables for the container
    environment:
      MONOREPO_ROOT: ${USE_MONOREPO_ROOT:-/home/node/apps}
      NODE_ENV: ${NODE_ENV:-development}
    # working directory inside the container
    working_dir: ${MONOREPO_ROOT:-/home/node/apps}/
    # volumes to mount
    volumes:
      - ./:${MONOREPO_ROOT:-/home/node/apps}/
      - build_logs:/var/log/monorepo/
      - npm_logs:/home/${HOST_USER}/.npm/_logs/
    # services that this container depends on
    depends_on:
      - db_mongo
      - redis
    # network settings
    networks:
      - guestnet
    ports:
      - "4200:4200"
      - "3000:3000"

  # redis service
  redis:
    # image name and version
    image: redis:bullseye
    # container name
    container_name: redis-cache
    # container hostname
    hostname: redis
    # command to run on container startup
    command: redis-server /usr/local/etc/redis/redis.conf
    # system control options
    sysctls:
      net.core.somaxconn: 1024
    # volumes to mount
    volumes:
      - data_redis:/var/lib/redis
      - ./docker-assets/redis/redis.conf:/usr/local/etc/redis/redis.conf
    # ports to expose
    expose:
      - 6379
    # network settings
    networks:
      - guestnet
    # user for the container
    user: redis:redis
    # environment variables for the container
    environment:
      DEBUG: ${DEBUG:-}
    # restart policy for the container
    restart: unless-stopped

  # db_mongo service
  db_mongo:
    # container name
    container_name: mongo
    # container hostname
    hostname: db
    # command to run on container startup
    command: mongod --auth --port 27017 --wiredTigerCacheSizeGB 1.5
    # build settings
    build:
      context: docker-assets/mongo/
      dockerfile: Dockerfile
      shm_size: 500m
    # environment variables for the container
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${USE_MONGO_USER:?Specify USE_MONGO_USER environment variable}
      MONGO_INITDB_ROOT_PASSWORD: ${USE_MONGO_PASS:?Specify USE_MONGO_PASS environment variable}
      MONGO_INITDB_DATABASE: ${USE_MONGO_DB:?Specify USE_MONGO_DB environment variable}
    # volumes to mount
    volumes:
      - data_db_mongodb:/data/db
      - var_lib_mongodb:/var/lib/mongodb
      - var_log_mongodb:/var/log/mongodb
    ports:
      - "27017:27017"
    # network settings
    networks:
      - guestnet
    # set ulimit values
    ulimits:
      nproc: 65535
      nofile:
        soft: 64000
        hard: 128000
    # restart policy for the container
    restart: unless-stopped

# Specify volumes
volumes:
  data_redis:
  build_logs:
  npm_logs:
  data_db_mongodb:
  var_lib_mongodb:
  var_log_mongodb:
  
# Specify networks
networks:
  guestnet:
    ipam:
      driver: default
      config:
        - subnet: 172.16.54.0/24
